version: "3.8"
services:
  app:
    image: final_project:v6
    build: .
    container_name: final_project
    volumes:
      - ./:/final_project
    environment:
      - name=value
    ports:
      - "3002:3002"
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - my_network

  redis:
    container_name: redis_db
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3310:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=adalovelaceakademi
      - MYSQL_USER=seher
      - MYSQL_PASSWORD=password
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - my_network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=seher
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
    networks:
      - my_network

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=seher
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - my_network

volumes:
  mongo-data:
    driver: local
  db_data:
    driver: local

networks:
  my_network:
    driver: bridge